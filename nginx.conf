# TranscriptPro Nginx Configuration - Production web server के लिए
# यह file Nginx को configure करती है कि application कैसे serve करना है

# Main Nginx configuration
events {
    worker_connections 1024; # Maximum simultaneous connections
}

http {
    # Basic Settings
    sendfile on; # File sending optimization
    tcp_nopush on; # Network optimization
    tcp_nodelay on; # Network optimization
    keepalive_timeout 65; # Connection timeout
    types_hash_max_size 2048; # MIME types hash size

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Gzip Compression - Bandwidth save करने के लिए
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;

    # Upstream Backend Servers - Load balancing के लिए
    upstream backend_servers {
        server 127.0.0.1:5000; # Backend server 1
        server 127.0.0.1:5001; # Backend server 2 (cluster mode)
        server 127.0.0.1:5002; # Backend server 3 (cluster mode)
        
        # Load balancing method
        least_conn; # Least connections method
    }

    # HTTP Server (Port 80) - Redirect to HTTPS के लिए
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com; # Your domain names

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Redirect to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS Server (Port 443) - Main production server
    server {
        listen 443 ssl http2; # HTTP/2 support के साथ SSL
        server_name your-domain.com www.your-domain.com;

        # SSL Certificate Paths - Let's Encrypt certificates
        ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;

        # SSL Security Configuration
        ssl_protocols TLSv1.2 TLSv1.3; # Secure protocols only
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security Headers - Additional security के लिए
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.youtube.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://www.googleapis.com;" always;

        # Root Directory - Frontend files location
        root /var/www/transcriptpro/frontend;
        index index.html;

        # API Routes Proxy - Backend server को forward करने के लिए
        location /api/ {
            proxy_pass http://backend_servers; # Backend servers को forward
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout Settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS Headers
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            
            # Preflight Requests Handle करें
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # YouTube Captions Route - Special handling के लिए
        location /api/youtube/ {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for YouTube processing
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Static Files Serving - Caching के साथ
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y; # 1 year cache
            add_header Cache-Control "public, immutable";
            try_files $uri $uri/ =404;
        }

        # HTML Files - No cache (always fresh)
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Main Application Route - SPA support के लिए
        location / {
            try_files $uri $uri/ /index.html; # Fallback to index.html
            expires -1; # No cache
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Health Check Endpoint - Monitoring के लिए
        location /health {
            access_log off; # Health checks log नहीं करें
            return 200 "healthy\n"; # Simple health response
            add_header Content-Type text/plain;
        }

        # Security - Sensitive files block करें
        location ~ /\. {
            deny all; # Hidden files block
            access_log off;
            log_not_found off;
        }

        location ~ /\.env {
            deny all; # Environment files block
            access_log off;
            log_not_found off;
        }

        # Rate Limiting - API protection के लिए
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        location /api/ {
            limit_req zone=api burst=20 nodelay;
        }

        # Access Logs
        access_log /var/log/nginx/transcriptpro.access.log main;
        error_log /var/log/nginx/transcriptpro.error.log;
    }

    # Server Status Monitoring - Nginx status के लिए
    server {
        listen 8080;
        server_name 127.0.0.1;
        
        location /nginx_status {
            stub_status on; # Nginx status enable
            access_log off; # Status logs off
            allow 127.0.0.1; # Local access only
            deny all; # Others deny
        }
    }
}
